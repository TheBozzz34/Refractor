# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  jira: circleci/jira@1.3.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      # Install Jfrog CLI
      - run:
          name: Install jFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh
      # Add Jfrog config
      #    - run: ./jfrog config add refractor --artifactory-url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --password $PASSWORD --interactive=false
      # Upload to Jfrog
      #  - run: ./jfrog rt u "multi*/*.jar" refractor --build-name=Refracor --build-number=$CIRCLE_BUILD_NUM --flat=false


      

      




workflows:
  build:
    jobs:
      - build-and-test:
          post-steps:
            - jira/notify
      
